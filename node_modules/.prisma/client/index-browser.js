
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.5.2
 * Query Engine version: aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a
 */
Prisma.prismaVersion = {
  client: "5.5.2",
  engine: "aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Tb_mhsScalarFieldEnum = {
  nim: 'nim',
  nama: 'nama',
  statusAktif: 'statusAktif',
  alamat: 'alamat',
  email: 'email',
  kodeKab: 'kodeKab',
  kodeProv: 'kodeProv',
  jalurMasuk: 'jalurMasuk',
  angkatan: 'angkatan',
  noHP: 'noHP',
  kodeWali: 'kodeWali',
  foto: 'foto'
};

exports.Prisma.Tb_dosenScalarFieldEnum = {
  nip: 'nip',
  nama: 'nama',
  alamat: 'alamat',
  email: 'email',
  kodeKab: 'kodeKab',
  kodeProv: 'kodeProv',
  noHP: 'noHP',
  foto: 'foto'
};

exports.Prisma.Tb_irsScalarFieldEnum = {
  nim: 'nim',
  semester: 'semester',
  status: 'status',
  jumlahSks: 'jumlahSks',
  fileIrs: 'fileIrs',
  statusValidasi: 'statusValidasi'
};

exports.Prisma.Tb_khsScalarFieldEnum = {
  nim: 'nim',
  semester: 'semester',
  status: 'status',
  jumlahSksSemester: 'jumlahSksSemester',
  ips: 'ips',
  jumlahSksKumulatif: 'jumlahSksKumulatif',
  ipk: 'ipk',
  fileKhs: 'fileKhs',
  statusValidasi: 'statusValidasi'
};

exports.Prisma.Tb_pklScalarFieldEnum = {
  nim: 'nim',
  semester: 'semester',
  nilai: 'nilai',
  filePkl: 'filePkl',
  statusValidasi: 'statusValidasi'
};

exports.Prisma.Tb_skripsiScalarFieldEnum = {
  nim: 'nim',
  semester: 'semester',
  nilai: 'nilai',
  tanggalLulusSidang: 'tanggalLulusSidang',
  lamaStudi: 'lamaStudi',
  fileSkripsi: 'fileSkripsi',
  statusValidasi: 'statusValidasi'
};

exports.Prisma.Tb_provinsiScalarFieldEnum = {
  kodeProv: 'kodeProv',
  namaProv: 'namaProv'
};

exports.Prisma.Tb_kabupatenScalarFieldEnum = {
  kodeKab: 'kodeKab',
  namaKab: 'namaKab',
  kodeProv: 'kodeProv'
};

exports.Prisma.Tb_akun_mhsScalarFieldEnum = {
  username: 'username',
  password: 'password',
  status: 'status',
  pemilik: 'pemilik'
};

exports.Prisma.Tb_akun_dosenScalarFieldEnum = {
  username: 'username',
  password: 'password',
  status: 'status',
  pemilik: 'pemilik'
};

exports.Prisma.Tb_role_akun_dosenScalarFieldEnum = {
  username: 'username',
  role: 'role'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.StatusMhs = exports.$Enums.StatusMhs = {
  Aktif: 'Aktif',
  Cuti: 'Cuti',
  Lulus: 'Lulus',
  Mangkir: 'Mangkir',
  DO: 'DO',
  UndurDiri: 'UndurDiri',
  MeninggalDunia: 'MeninggalDunia'
};

exports.JalurMasuk = exports.$Enums.JalurMasuk = {
  SBMPTN: 'SBMPTN',
  SNMPTN: 'SNMPTN',
  Mandiri: 'Mandiri',
  Lainnya: 'Lainnya'
};

exports.StatusAktif = exports.$Enums.StatusAktif = {
  Aktif: 'Aktif',
  Cuti: 'Cuti'
};

exports.StatusAkun = exports.$Enums.StatusAkun = {
  Aktif: 'Aktif',
  NonAktif: 'NonAktif'
};

exports.Role = exports.$Enums.Role = {
  Operator: 'Operator',
  Departemen: 'Departemen',
  Dosen: 'Dosen'
};

exports.Prisma.ModelName = {
  tb_mhs: 'tb_mhs',
  tb_dosen: 'tb_dosen',
  tb_irs: 'tb_irs',
  tb_khs: 'tb_khs',
  tb_pkl: 'tb_pkl',
  tb_skripsi: 'tb_skripsi',
  tb_provinsi: 'tb_provinsi',
  tb_kabupaten: 'tb_kabupaten',
  tb_akun_mhs: 'tb_akun_mhs',
  tb_akun_dosen: 'tb_akun_dosen',
  tb_role_akun_dosen: 'tb_role_akun_dosen'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
